name: SonarQube-Server
on:
  push:
    paths:
      - 'CSharpProject/**'
    branches:
      - main # the name of your main branch
  pull_request:
      types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build:
    name: SonarQube-Server
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarQube packages
        uses: actions/cache@v4.2.0
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4.2.0
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:'$(echo $GITHUB_REPOSITORY | cut -d'/' -f1)-gh_$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)' /d:sonar.token='$SONAR_TOKEN' /d:sonar.host.url='$SONAR_HOST_URL' /d:sonar.verbose=true /d:sonar.projectName='$(echo $GITHUB_REPOSITORY | cut -d'/' -f1)-gh_$(echo $GITHUB_REPOSITORY | cut -d'/' -f2)'
          dotnet build CSharpProject/SomeConsoleApplication.sln
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token='$SONAR_TOKEN'
